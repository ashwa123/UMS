var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.341,1,0.805]],["body/components/AppComponent.html",[0,0.559,1,1.401,2,1.686,3,0.451,4,0.38,5,1.445,6,1.445,7,1.445,8,1.445,9,0.38,10,2.537,11,1.445,12,2.21,13,1.963,14,2.455,15,1.686,16,4.591,17,1.686,18,4.107,19,0.527,20,1.18,21,5.204,22,4.591,23,5.069,24,0.776,25,0.046,26,1.319,27,3.121,28,2.002,29,4.879,30,4.879,31,2.915,32,4.879,33,3.121,34,1.281,35,1.445,36,1.445,37,3.339,38,3.121,39,3.339,40,0.527,41,0.451,42,0.451,43,0.527,44,1.138,45,1.901,46,1.901,47,1.445,48,2.258,49,1.445,50,0.802,51,1.445,52,0.697,53,1.281,54,1.445,55,0.792,56,1.445,57,0.896,58,1.445,59,0.697,60,0.594,61,1.445,62,0.792,63,1.445,64,1.445,65,1.445,66,0.025,67,0.033,68,0.025]],["title/modules/AppModule.html",[69,1.151,70,1.675]],["body/modules/AppModule.html",[1,1.569,3,0.395,4,0.333,9,0.333,25,0.047,40,0.935,41,0.395,42,0.395,43,0.462,44,0.997,52,1.118,55,1.271,57,1.438,59,1.118,62,1.271,66,0.022,67,0.03,68,0.022,69,1.122,70,3.412,71,1.266,72,1.634,73,2.961,74,3.49,75,3.49,76,1.634,77,2.223,78,2.223,79,2.223,80,2.223,81,2.223,82,2.624,83,2.624,84,2.624,85,3.055,86,2.223,87,1.634,88,2.734,89,2.591,90,3.758,91,3.055,92,1.886,93,2.591,94,3.758,95,2.734,96,3.758,97,3.758,98,1.122,99,3.758,100,3.758,101,1.886,102,2.734,103,2.734,104,2.734,105,2.734,106,2.223,107,3.055,108,1.433,109,2.223,110,2.223,111,1.266,112,1.634,113,2.734,114,2.734,115,1.433,116,1.886,117,2.734,118,2.734,119,2.734,120,1.266]],["title/modules/AppRoutingModule.html",[69,1.151,82,1.469]],["body/modules/AppRoutingModule.html",[0,0.596,3,0.518,4,0.436,9,0.436,25,0.047,40,0.912,41,0.518,42,0.518,43,0.605,52,1.002,55,1.14,59,1.002,60,0.518,66,0.029,67,0.036,68,0.029,71,1.658,76,2.141,82,2.352,89,2.471,93,3.095,106,2.913,107,2.913,108,1.878,109,2.913,110,2.913,111,1.658,112,2.141,121,3.583,122,3.583,123,2.569,124,4.488,125,1.878,126,2.929,127,3.583,128,2.141,129,5.137,130,3.095,131,3.648,132,3.583,133,3.583,134,3.583,135,3.583,136,3.583]],["title/guards/AuthGuard.html",[126,1.675,137,1.675]],["body/guards/AuthGuard.html",[3,0.426,4,0.359,9,0.359,14,1.762,19,0.498,24,0.668,25,0.047,26,1.282,31,3.126,40,0.806,41,0.426,42,0.426,43,0.498,50,0.772,60,0.572,66,0.024,67,0.032,68,0.024,120,1.365,123,2.073,125,1.546,126,2.364,131,4.044,137,2.364,138,2.949,139,2.397,140,1.281,141,4.77,142,1.136,143,2.949,144,1.527,145,2.949,146,1.136,147,3.216,148,1.281,149,1.136,150,2.949,151,4.77,152,4.77,153,4.77,154,2.949,155,3.216,156,2.5,157,3.956,158,2.667,159,1.281,160,3.078,161,3.956,162,2.5,163,4.464,164,2.949,165,1.442,166,2.364,167,1.442,168,1.624,169,1.762,170,2.949,171,2.034,172,1.075,173,1.37,174,1.136,175,2.339,176,2.949,177,2.397,178,2.949,179,1.762]],["title/injectables/AuthService.html",[144,0.805,168,1.151]],["body/injectables/AuthService.html",[3,0.401,4,0.338,9,0.338,14,1.658,19,0.469,20,1.09,24,0.786,25,0.047,26,1.445,34,2.065,40,0.731,41,0.401,42,0.401,43,0.469,50,0.741,60,0.797,66,0.022,67,0.031,68,0.022,130,3.208,140,1.229,142,1.09,144,1.09,146,1.09,147,3.085,148,1.229,149,1.09,156,1.989,159,1.401,162,1.989,165,1.834,166,2.268,167,1.384,168,1.558,171,1.913,173,0.797,174,0.797,175,1.454,180,1.913,181,2.255,182,4.326,183,2.267,184,2.438,185,3.796,186,4.326,187,2.775,188,1.909,189,2.775,190,3.085,191,2.585,192,2.775,193,2.553,194,1.558,195,1.909,196,3.796,197,2.438,198,2.775,199,1.384,200,2.775,201,1.909,202,3.781,203,2.775,204,1.989,205,2.775,206,2.775,207,1.658,208,1.658,209,2.775,210,1.989,211,2.775,212,2.775,213,2.775,214,2.255,215,2.775]],["title/components/EditUserComponent.html",[0,0.341,52,0.626]],["body/components/EditUserComponent.html",[0,0.492,1,0.504,2,1.114,3,0.253,4,0.213,5,0.812,6,0.812,7,0.812,8,0.812,9,0.213,11,0.812,12,1.892,13,1.68,15,1.114,17,1.114,19,0.296,20,0.78,24,0.683,25,0.047,26,1.388,28,1.114,40,0.683,41,0.253,42,0.253,43,0.296,44,0.639,45,1.256,46,1.256,47,0.812,48,1.731,49,0.812,50,0.835,51,0.812,52,0.835,53,2.051,54,0.812,55,0.445,56,0.812,57,0.504,58,0.812,59,0.392,60,0.754,61,0.812,62,0.445,63,0.812,64,0.812,65,0.812,66,0.014,67,0.022,68,0.014,98,0.72,111,2.278,140,0.879,142,0.78,144,1.324,146,1.228,148,0.568,149,0.504,159,1.31,165,1.559,167,0.99,172,0.99,173,1.162,174,0.954,183,1.74,188,1.535,191,2.234,195,1.984,199,1.211,201,1.535,204,1.422,207,1.048,208,1.048,210,0.919,216,4,217,1.425,218,1.537,219,3.321,220,2.714,221,2.556,222,2.556,223,2.556,224,4.46,225,2.888,226,3.739,227,1.731,228,2.683,229,1.209,230,2.338,231,3.287,232,2.714,233,1.753,234,1.872,235,1.753,236,1.959,237,2.789,238,1.753,239,1.872,240,2.338,241,1.753,242,1.872,243,1.753,244,1.209,245,2.206,246,1.753,247,1.753,248,1.74,249,1.753,250,1.425,251,1.425,252,0.919,253,0.919,254,1.048,255,2.714,256,0.919,257,0.919,258,1.425,259,1.425,260,1.425,261,1.425,262,1.425,263,1.425,264,1.74,265,1.425,266,1.425,267,1.74,268,1.425,269,1.425,270,1.753,271,1.753,272,2.714,273,1.872,274,2.714,275,1.872,276,1.753,277,1.753,278,1.753,279,1.753,280,1.422,281,1.256,282,1.422,283,2.714,284,1.872,285,1.048,286,1.209,287,1.985,288,1.048,289,1.048,290,1.622,291,1.048,292,1.209,293,1.209,294,1.425,295,1.048,296,1.209,297,1.209,298,1.048,299,1.048,300,1.425,301,1.048,302,1.425,303,1.425]],["title/interceptors/HeaderInterceptor.html",[84,1.469,304,1.933]],["body/interceptors/HeaderInterceptor.html",[3,0.452,4,0.38,9,0.38,19,0.528,24,0.695,25,0.047,26,1.181,40,0.825,41,0.452,42,0.452,43,0.528,50,0.803,60,0.595,66,0.025,67,0.033,68,0.025,84,2.156,101,2.157,128,1.869,140,1.332,142,1.181,144,1.525,146,1.181,148,1.332,149,1.181,155,3.343,158,2.918,159,1.013,160,3.169,167,1.5,168,1.688,169,1.869,172,1.14,173,1.32,174,0.898,175,1.639,199,1.935,304,2.837,305,3.127,306,2.542,307,4.113,308,2.157,309,3.127,310,3.343,311,4.113,312,4.882,313,4.882,314,3.127,315,4.113,316,5.207,317,4.113,318,3.127,319,4.113,320,3.127,321,3.127,322,4.113,323,4.113,324,3.127]],["title/components/LoginComponent.html",[0,0.341,55,0.712]],["body/components/LoginComponent.html",[0,0.542,1,0.63,2,1.319,3,0.317,4,0.267,5,1.016,6,1.016,7,1.016,8,1.016,9,0.267,11,1.016,12,2.025,13,1.799,15,1.319,17,1.319,19,0.371,20,0.923,24,0.543,25,0.047,26,1.338,31,2.949,35,1.016,36,1.016,40,0.708,41,0.317,42,0.317,43,0.371,44,0.8,45,1.488,46,1.488,47,1.016,48,1.938,49,1.016,50,0.742,51,1.016,52,0.49,53,0.901,54,1.016,55,1.063,56,1.016,57,0.63,58,1.016,59,0.49,60,0.605,61,1.016,62,0.557,63,1.016,64,1.016,65,1.016,66,0.018,67,0.026,68,0.018,98,0.901,120,1.488,125,1.15,130,3.403,140,1.041,142,0.923,144,1.417,146,1.203,148,0.711,149,0.63,159,1.232,165,1.698,172,1.172,173,1.092,174,1.092,175,1.15,177,1.784,184,2.441,193,1.685,194,1.319,195,1.912,197,2.522,199,1.625,201,1.319,218,1.761,227,1.938,229,1.513,230,2.522,236,1.685,237,1.513,240,1.15,248,1.993,253,1.15,256,1.15,284,2.623,285,1.311,286,1.513,287,2.273,288,1.311,289,1.311,290,2.273,291,1.921,292,1.513,293,1.513,294,1.784,295,1.311,296,1.513,297,1.513,298,1.311,299,1.311,300,1.784,301,1.311,302,1.784,303,1.784,325,1.784,326,3.804,327,3.214,328,4.457,329,4.812,330,3.214,331,2.194,332,2.194,333,2.194,334,2.217,335,3.214,336,3.214,337,2.194,338,2.194,339,2.194,340,3.214,341,1.513,342,2.194,343,2.194,344,2.194,345,2.194,346,2.194,347,2.194,348,4.187,349,4.187,350,3.214,351,3.214,352,2.194,353,2.194]],["title/modules/MaterialModule.html",[69,1.151,83,1.469]],["body/modules/MaterialModule.html",[3,0.539,4,0.453,9,0.453,25,0.046,40,0.956,41,0.539,42,0.539,43,0.63,66,0.03,67,0.037,68,0.03,71,1.724,73,2.569,76,2.226,83,2.41,89,2.569,93,3.171,252,1.952,354,3.725,355,4.598,356,3.028,357,4.988,358,3.725,359,4.988,360,3.725,361,4.988,362,3.725,363,4.988,364,3.725,365,4.988,366,3.725,367,4.988,368,4.988,369,2.569,370,4.988,371,3.725]],["title/components/NavbarComponent.html",[0,0.341,57,0.805]],["body/components/NavbarComponent.html",[0,0.573,1,0.726,2,1.46,3,0.365,4,0.307,5,1.17,6,1.17,7,1.17,8,1.17,9,0.307,11,1.17,12,2.103,13,1.868,15,1.46,17,1.46,19,0.427,20,1.022,24,0.601,25,0.047,26,1.283,28,1.834,31,3.062,40,0.696,41,0.365,42,0.365,43,0.427,44,0.921,45,1.647,46,1.647,47,1.17,48,2.068,49,1.17,50,0.803,51,1.17,52,0.564,53,1.037,54,1.17,55,0.642,56,1.17,57,1.283,58,1.17,59,0.564,60,0.763,61,1.17,62,0.642,63,1.17,64,1.17,65,1.17,66,0.02,67,0.029,68,0.02,87,2.67,125,1.324,140,1.152,142,1.022,144,1.442,146,1.022,148,0.818,149,0.726,159,1.152,165,1.297,167,1.629,172,1.297,173,1.022,174,1.022,183,2.157,195,1.834,201,1.46,204,1.864,210,1.324,218,1.906,227,2.068,236,1.864,253,1.324,254,2.126,285,1.51,287,2.126,288,1.51,289,1.51,290,1.51,291,1.51,292,1.743,298,1.51,299,1.51,301,1.51,308,1.743,372,2.054,373,4.117,374,4.117,375,3.557,376,4.468,377,3.557,378,3.557,379,3.557,380,2.527,381,4.709,382,2.527,383,3.557,384,2.527,385,2.527,386,3.557,387,3.557,388,3.557,389,2.054,390,2.054,391,2.527,392,3.557,393,2.527,394,2.527,395,2.126,396,2.527,397,2.527]],["title/interfaces/User.html",[60,0.405,398,1.298]],["body/interfaces/User.html",[3,0.479,4,0.403,9,0.403,19,0.56,20,1.227,24,0.909,25,0.046,34,2.339,42,0.479,50,1.032,60,0.826,66,0.027,67,0.034,68,0.027,149,1.227,162,2.477,167,1.557,197,2.772,199,1.929,257,2.616,264,2.772,267,2.772,280,2.238,281,1.977,282,2.708,398,1.534,399,2.285,400,2.694,401,3.443,402,4.271,403,2.946]],["title/interfaces/UserData.html",[398,1.298,404,1.469]],["body/interfaces/UserData.html",[0,0.413,3,0.262,4,0.221,9,0.221,12,0.744,13,0.661,15,0.744,17,0.744,19,0.306,20,0.8,24,0.643,25,0.048,28,1.853,34,1.779,40,0.787,41,0.262,42,0.403,43,0.306,50,0.909,52,0.757,53,1.392,59,0.405,60,0.792,62,0.707,66,0.015,67,0.022,68,0.015,69,0.744,98,0.744,108,0.95,111,0.839,112,1.083,115,0.95,116,1.25,120,0.839,128,2.274,142,0.521,144,1.093,146,0.974,156,0.95,158,1.083,162,0.95,165,1.699,166,1.083,167,1.015,172,0.661,173,1.179,174,0.974,179,2.026,183,0.95,184,1.459,188,1.143,191,1.664,193,1.777,194,0.744,195,1.912,197,0.95,199,1.015,201,0.744,204,0.95,207,1.083,208,1.083,210,0.95,218,1.289,221,1.083,222,2.026,223,2.026,225,1.083,227,0.839,228,1.777,230,1.994,236,0.95,239,1.25,240,1.777,242,1.25,248,1.459,252,0.95,253,0.95,254,1.083,256,0.95,257,2.272,264,2.442,267,2.442,273,1.92,275,1.25,280,1.459,281,1.289,282,2.152,295,1.664,334,1.25,341,2.989,369,1.25,395,1.083,398,0.839,399,1.25,401,1.25,403,1.25,404,1.777,405,1.083,406,1.25,407,1.473,408,2.264,409,2.264,410,1.92,411,1.473,412,1.473,413,2.698,414,1.473,415,1.473,416,1.92,417,1.473,418,2.339,419,1.25,420,1.25,421,1.25,422,1.25,423,1.473,424,1.473,425,1.473,426,1.473,427,1.473,428,1.473,429,3.338,430,1.473,431,1.473,432,1.473,433,1.473,434,2.264,435,1.473,436,1.473,437,1.473,438,1.473,439,1.473,440,1.473,441,1.473,442,1.473,443,1.473,444,1.473,445,2.756,446,1.473,447,1.473,448,1.473,449,2.756,450,2.756,451,1.473,452,2.756,453,2.264,454,2.264,455,2.756,456,1.473,457,1.473,458,1.473,459,1.473,460,1.473,461,1.473,462,1.473,463,1.473,464,1.473,465,1.473,466,1.473,467,1.473,468,1.473,469,1.473,470,1.473,471,1.473,472,1.473,473,1.473,474,1.473,475,1.473,476,1.473,477,1.473,478,1.473,479,2.264,480,1.473,481,2.264,482,2.756,483,1.473,484,1.473,485,1.473]],["title/components/UserDetailComponent.html",[0,0.341,59,0.626]],["body/components/UserDetailComponent.html",[0,0.385,1,0.315,2,0.761,3,0.158,4,0.133,5,0.507,6,0.507,7,0.507,8,0.507,9,0.133,11,0.507,12,1.58,13,1.404,15,0.761,17,0.761,19,0.185,20,0.532,24,0.755,25,0.047,26,1.409,28,1.868,34,0.989,35,1.115,36,1.115,40,0.651,41,0.158,42,0.268,43,0.185,44,0.4,45,0.858,46,0.858,47,0.507,48,1.311,49,0.507,50,0.916,51,0.507,52,0.768,53,1.868,54,0.507,55,0.278,56,0.507,57,0.315,58,0.507,59,0.633,60,0.783,61,0.507,62,0.719,63,1.115,64,0.507,65,0.507,66,0.009,67,0.015,68,0.009,69,0.45,98,0.45,108,2.594,111,0.507,112,0.655,115,0.574,116,0.756,120,0.507,128,1.693,140,0.6,142,0.532,144,1.052,146,0.988,148,1.026,149,0.91,156,0.972,158,0.655,159,1.299,162,0.972,165,1.711,166,1.108,167,1.033,172,0.676,173,0.91,174,0.692,179,1.693,183,1.263,184,1.802,188,1.163,191,1.693,193,1.66,194,0.761,195,1.951,197,0.574,199,1.335,201,0.761,204,0.972,207,0.655,208,0.655,210,0.574,214,1.507,218,1.115,221,1.44,222,1.693,223,1.44,225,2.189,227,1.311,228,1.802,230,2.018,236,2.018,237,1.661,239,1.279,240,1.802,242,1.279,244,0.756,248,1.263,252,0.574,253,0.574,254,0.655,256,0.574,257,1.485,264,2.102,267,2.102,273,1.279,275,0.756,280,1.66,281,1.466,282,1.802,284,2.185,285,0.655,286,1.661,287,2.301,288,2.055,289,2.189,290,1.44,291,0.655,293,0.756,295,1.693,296,1.954,297,0.756,298,1.108,299,1.108,301,1.108,308,0.756,334,1.279,341,2.372,369,0.756,389,1.507,390,0.891,395,2.055,398,0.507,401,1.661,403,1.279,404,1.263,405,2.958,406,0.756,407,0.891,408,2.575,409,1.958,410,1.954,411,1.507,412,1.958,413,2.719,414,1.507,415,1.958,416,2.372,417,1.958,418,2.943,419,1.279,420,1.279,421,1.661,422,1.279,423,1.958,424,1.507,425,1.958,426,1.958,427,1.507,428,1.958,429,3.555,430,0.891,431,2.303,432,0.891,433,0.891,434,1.507,435,0.891,436,0.891,437,0.891,438,0.891,439,0.891,440,0.891,441,0.891,442,0.891,443,0.891,444,0.891,445,1.958,446,0.891,447,0.891,448,0.891,449,2.795,450,2.795,451,1.507,452,3.26,453,1.507,454,1.507,455,1.958,456,1.507,457,0.891,458,1.507,459,0.891,460,0.891,461,0.891,462,0.891,463,0.891,464,2.795,465,0.891,466,0.891,467,0.891,468,1.507,469,1.507,470,1.507,471,0.891,472,0.891,473,0.891,474,0.891,475,0.891,476,0.891,477,0.891,478,1.507,479,1.507,480,0.891,481,1.507,482,1.958,483,0.891,484,0.891,485,0.891,486,2.833,487,1.854,488,1.096,489,1.096,490,1.096,491,1.096,492,1.096,493,1.096,494,1.096,495,1.096,496,1.096,497,1.096,498,1.096,499,1.096,500,1.096,501,1.096,502,1.096,503,1.096,504,1.096,505,1.096,506,1.096,507,1.854,508,1.854,509,1.854,510,1.854,511,1.854,512,1.854,513,1.096,514,1.096,515,1.096,516,1.096,517,1.507,518,1.096,519,1.096,520,1.854,521,1.854,522,1.854,523,1.854,524,1.507,525,1.507,526,0.891]],["title/injectables/UserDetailService.html",[168,1.151,188,1.151]],["body/injectables/UserDetailService.html",[3,0.393,4,0.331,9,0.331,14,1.625,19,0.46,20,1.075,24,0.817,25,0.047,26,1.436,34,1.116,35,1.259,36,1.259,40,0.779,41,0.393,42,0.393,43,0.46,50,0.9,60,0.723,66,0.022,67,0.03,68,0.022,101,1.875,140,1.212,142,1.075,146,1.075,148,1.494,149,1.325,159,1.494,160,3.652,165,1.902,168,1.537,169,1.625,171,1.875,173,0.781,174,0.781,175,2.417,180,1.875,184,2.417,188,1.537,190,3.043,193,2.62,194,2.199,225,2.237,228,1.962,281,1.982,310,3.48,404,2.417,410,2.582,413,2.237,418,2.582,527,4.163,528,2.21,529,4.837,530,3.744,531,3.744,532,3.744,533,2.719,534,4.612,535,3.744,536,2.719,537,2.719,538,2.719,539,2.719,540,2.719,541,2.719,542,2.719,543,3.744,544,2.719,545,2.719,546,2.719,547,2.719,548,2.719,549,2.719,550,2.719,551,2.719,552,2.719,553,2.719]],["title/components/UserViewComponent.html",[0,0.341,62,0.712]],["body/components/UserViewComponent.html",[0,0.543,1,0.631,2,1.321,3,0.318,4,0.267,5,1.017,6,1.017,7,1.017,8,1.017,9,0.267,11,1.017,12,2.026,13,1.8,15,1.321,17,1.321,19,0.371,20,0.924,24,0.708,25,0.047,26,1.383,28,1.321,34,0.902,35,1.017,36,1.017,40,0.643,41,0.318,42,0.318,43,0.371,44,0.801,45,1.489,46,1.489,47,1.017,48,1.94,49,1.017,50,0.909,51,1.017,52,0.491,53,0.902,54,1.017,55,0.558,56,1.017,57,0.631,58,1.017,59,0.491,60,0.788,61,1.017,62,1.064,63,2.331,64,1.017,65,1.017,66,0.018,67,0.026,68,0.018,98,0.902,115,2.587,140,1.042,142,0.924,146,0.924,148,0.712,149,0.631,159,1.042,172,1.173,173,1.093,174,0.631,195,1.72,199,1.388,201,1.321,218,1.762,221,2.785,222,2.785,223,2.785,227,1.94,228,1.686,229,1.515,230,2.523,231,3.626,240,2.442,244,1.515,245,2.616,248,1.995,250,1.786,251,1.786,252,1.152,256,1.152,257,1.152,258,1.786,259,1.786,260,1.786,261,1.786,262,1.786,263,1.786,264,1.995,265,1.786,266,1.786,267,1.995,268,1.786,269,1.786,280,1.686,281,1.489,282,1.686,405,2.95,413,1.923,419,2.219,420,2.219,421,2.625,422,2.219,524,2.616,525,2.616,526,1.786,554,1.786,555,3.807,556,3.218,557,4.814,558,3.218,559,2.197,560,4.19,561,2.197,562,2.197,563,2.197,564,2.197,565,3.218,566,3.807,567,2.197,568,2.197]],["title/coverage.html",[569,3.107]],["body/coverage.html",[0,0.651,1,0.996,9,0.422,10,2.818,24,0.586,25,0.046,28,1.805,52,0.774,55,0.88,57,0.996,59,0.774,60,0.501,62,0.88,66,0.028,67,0.035,68,0.028,84,1.817,108,2.304,111,1.605,115,1.817,126,2.072,137,2.072,139,2.818,144,0.996,168,1.805,181,2.818,188,1.423,216,2.818,217,2.818,234,2.391,304,2.391,306,2.818,325,2.818,372,2.818,395,2.627,398,2.035,400,2.818,404,1.817,405,2.885,406,3.032,416,2.391,527,2.818,528,2.818,554,2.818,569,2.818,570,3.467,571,3.467,572,3.467,573,4.396,574,4.396,575,3.467,576,3.467,577,4.828,578,4.396,579,3.467,580,3.467,581,3.467,582,4.396,583,4.396,584,3.467,585,3.467,586,3.467,587,3.467,588,3.467,589,3.467,590,2.818,591,3.574,592,4.396,593,2.818,594,3.467]],["title/dependencies.html",[72,2.014,595,2.343]],["body/dependencies.html",[25,0.047,41,0.574,66,0.032,67,0.038,68,0.032,72,2.373,91,3.887,92,3.298,98,1.63,125,2.082,169,2.373,194,1.63,356,3.229,596,3.972,597,4.588,598,3.972,599,4.782,600,3.972,601,3.972,602,3.972,603,3.972,604,3.972,605,3.972,606,3.972,607,3.972,608,3.972,609,3.972]],["title/index.html",[19,0.396,610,2.343,611,2.343]],["body/index.html",[0,0.594,4,0.432,13,1.294,25,0.036,37,2.885,39,3.627,50,0.693,66,0.029,67,0.036,68,0.029,87,2.121,156,1.86,194,1.831,234,2.448,517,4.162,597,2.885,612,3.549,613,4.88,614,4.88,615,3.549,616,3.549,617,5.276,618,5.466,619,3.549,620,3.549,621,3.549,622,3.549,623,3.549,624,3.549,625,3.549,626,3.549,627,3.549,628,3.549,629,4.88,630,4.88,631,3.549,632,5.276,633,3.549,634,3.549,635,3.549,636,3.549,637,3.549,638,3.549,639,2.885,640,4.462,641,4.462,642,5.12,643,3.549,644,4.462,645,4.462,646,3.549,647,3.549,648,3.549,649,3.549,650,4.88,651,3.549,652,3.549,653,3.549]],["title/modules.html",[71,1.769]],["body/modules.html",[25,0.041,66,0.035,67,0.041,68,0.035,70,2.601,71,2.014,82,2.281,83,2.281,92,3.001,654,4.352,655,4.352,656,5.331,657,5.047,658,5.047]],["title/overview.html",[659,3.107]],["body/overview.html",[1,1.571,2,1.46,25,0.046,44,1.297,52,1.091,55,1.24,57,1.403,59,1.091,62,1.24,66,0.029,67,0.036,68,0.029,69,1.46,70,3.475,71,1.647,72,2.126,73,2.453,74,2.892,75,2.892,76,2.126,77,2.892,78,2.892,79,2.892,80,2.892,81,2.892,82,2.56,83,2.56,84,2.56,85,3.632,86,2.892,87,2.126,123,1.864,137,2.126,180,2.453,399,2.453,659,2.892,660,3.557,661,3.557,662,4.468,663,3.557,664,3.557]],["title/routes.html",[123,2.003]],["body/routes.html",[25,0.042,66,0.036,67,0.042,68,0.036,123,2.37]],["title/miscellaneous/variables.html",[665,1.904,666,2.74]],["body/miscellaneous/variables.html",[19,0.701,24,0.829,25,0.046,35,2.271,36,2.271,66,0.033,67,0.04,68,0.033,120,1.92,179,2.478,202,3.989,590,3.371,591,4.39,593,3.371,639,3.989,665,3.371,666,3.371,667,4.147,668,4.147]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":395,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["0.16.2",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":663,"title":{},"body":{"overview.html":{}}}],["1.10.0",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":286,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["18/21",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":662,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":519,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["24px",{"_index":299,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["3",{"_index":660,"title":{},"body":{"overview.html":{}}}],["3/4",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":393,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4",{"_index":664,"title":{},"body":{"overview.html":{}}}],["4/5",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":448,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["5/6",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":297,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["6",{"_index":661,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":396,"title":{},"body":{"components/NavbarComponent.html":{}}}],["66",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":303,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["9.0.7",{"_index":597,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.4",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["accessors",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["activatedroutesnapshot",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activation",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["add",{"_index":225,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["addoredit",{"_index":226,"title":{},"body":{"components/EditUserComponent.html":{}}}],["adduser",{"_index":530,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["adduser(userdata",{"_index":536,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["adduser(userdata:any",{"_index":552,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["admin",{"_index":403,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["alert('invalid",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":291,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["alignment",{"_index":513,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["alluser",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular",{"_index":613,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":356,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HeaderInterceptor.html":{},"injectables/UserDetailService.html":{}}}],["angular/compiler",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":362,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":360,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":252,"title":{},"body":{"components/EditUserComponent.html":{},"modules/MaterialModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["angular/material/icon",{"_index":366,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":358,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":369,"title":{},"body":{"modules/MaterialModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["angular/material/sort",{"_index":371,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":364,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["api/users",{"_index":543,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"index.html":{}}}],["app.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":70,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":82,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":633,"title":{},"body":{"index.html":{}}}],["assets/avatar.png",{"_index":422,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["auth",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":126,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":144,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"index.html":{}}}],["available",{"_index":658,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":419,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["avatarimg",{"_index":421,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["background",{"_index":391,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bar",{"_index":379,"title":{},"body":{"components/NavbarComponent.html":{}}}],["between",{"_index":390,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["boolean",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":522,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["boundary",{"_index":476,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["box",{"_index":450,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["browse",{"_index":656,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":632,"title":{},"body":{"index.html":{}}}],["button",{"_index":237,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["calls",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["canactivate",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":511,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["card",{"_index":512,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["center",{"_index":290,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["change",{"_index":625,"title":{},"body":{"index.html":{}}}],["check",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"index.html":{}}}],["checkloggedin",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checks",{"_index":402,"title":{},"body":{"interfaces/User.html":{}}}],["class",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["cli",{"_index":614,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":627,"title":{},"body":{"index.html":{}}}],["color",{"_index":392,"title":{},"body":{"components/NavbarComponent.html":{}}}],["column",{"_index":295,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["commonmodule",{"_index":355,"title":{},"body":{"modules/MaterialModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"overview.html":{}}}],["conatiner",{"_index":300,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["confirm('are",{"_index":459,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["console.log('unsuccessful",{"_index":275,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["console.log(response",{"_index":274,"title":{},"body":{"components/EditUserComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["constructor",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["constructor(authservice",{"_index":308,"title":{},"body":{"interceptors/HeaderInterceptor.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["constructor(formbuilder",{"_index":229,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserViewComponent.html":{}}}],["constructor(http",{"_index":533,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["constructor(router",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(userservice",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["container",{"_index":284,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["content",{"_index":289,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["core/auth/auth.guard",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/auth/auth.service",{"_index":253,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["coverage",{"_index":569,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["currentuser",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["currentuser?.name",{"_index":388,"title":{},"body":{"components/NavbarComponent.html":{}}}],["data",{"_index":222,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["data?.isedit",{"_index":283,"title":{},"body":{"components/EditUserComponent.html":{}}}],["debugelement",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["decide",{"_index":424,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["declaration",{"_index":413,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["declared",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["declares",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["decorators",{"_index":244,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":468,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["defines",{"_index":239,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["delete",{"_index":418,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["delete(row",{"_index":458,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["deleteuser",{"_index":531,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["deleteuser(user",{"_index":538,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["deleteuser(user:any",{"_index":546,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["dependencies",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designation",{"_index":566,"title":{},"body":{"components/UserViewComponent.html":{}}}],["detail",{"_index":410,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["detail'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["detail.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":411,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["detail.component.scss",{"_index":412,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["detail.component.ts",{"_index":406,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:108",{"_index":497,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:119",{"_index":488,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":489,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:142",{"_index":495,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":494,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":499,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":502,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":503,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":501,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":498,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":506,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:44",{"_index":505,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:46",{"_index":504,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":487,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:60",{"_index":500,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:68",{"_index":493,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":496,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:89",{"_index":492,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.component.ts:97",{"_index":491,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["detail.service",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["detail.service.ts",{"_index":528,"title":{},"body":{"injectables/UserDetailService.html":{},"coverage.html":{}}}],["detail.service.ts:14",{"_index":535,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["detail.service.ts:25",{"_index":540,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["detail.service.ts:30",{"_index":539,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["detail.service.ts:34",{"_index":542,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["detail.service.ts:38",{"_index":537,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["detail/user",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":242,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["dev",{"_index":620,"title":{},"body":{"index.html":{}}}],["development",{"_index":616,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":429,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["dialogref",{"_index":223,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":455,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["direction",{"_index":294,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["directives",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":631,"title":{},"body":{"index.html":{}}}],["directory",{"_index":636,"title":{},"body":{"index.html":{}}}],["disable",{"_index":472,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["display",{"_index":236,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["displayedcolumns",{"_index":417,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["dist",{"_index":635,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["dynamic",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":647,"title":{},"body":{"index.html":{}}}],["edit",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["edit(user",{"_index":451,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["edituser",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editusercomponent",{"_index":52,"title":{"components/EditUserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["email",{"_index":264,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["empid",{"_index":257,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["employee",{"_index":280,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["end",{"_index":517,"title":{},"body":{"components/UserDetailComponent.html":{},"index.html":{}}}],["endindex",{"_index":482,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["environment",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":471,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["eslint/explicit",{"_index":475,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["evenly",{"_index":514,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["event",{"_index":470,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["event.pageindex",{"_index":480,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["event.pagesize",{"_index":481,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["execute",{"_index":644,"title":{},"body":{"index.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["exports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["eye",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["features/login/login.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/user/edit",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/user/user",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["field",{"_index":293,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{}}}],["files",{"_index":626,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":521,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["flag",{"_index":638,"title":{},"body":{"index.html":{}}}],["flex",{"_index":287,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["font",{"_index":524,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["form",{"_index":240,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["formbuilder",{"_index":230,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["formgroup",{"_index":248,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["formsmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["further",{"_index":649,"title":{},"body":{"index.html":{}}}],["generate",{"_index":629,"title":{},"body":{"index.html":{}}}],["generated",{"_index":612,"title":{},"body":{"index.html":{}}}],["getalluser",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["getisloggedin",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":610,"title":{"index.html":{}},"body":{}}],["go",{"_index":652,"title":{},"body":{"index.html":{}}}],["graph",{"_index":657,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":137,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h2",{"_index":397,"title":{},"body":{"components/NavbarComponent.html":{}}}],["header",{"_index":317,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["headerinterceptor",{"_index":84,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HeaderInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["heading",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{}}}],["height",{"_index":285,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["help",{"_index":650,"title":{},"body":{"index.html":{}}}],["hide",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["http",{"_index":310,"title":{},"body":{"interceptors/HeaderInterceptor.html":{},"injectables/UserDetailService.html":{}}}],["http://localhost:4200",{"_index":622,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":534,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["httpclientmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":318,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httphandler",{"_index":313,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httpinterceptor",{"_index":319,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["icon",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{}}}],["id",{"_index":281,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["id:any",{"_index":550,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["identifier",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["if(endindex",{"_index":483,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["image",{"_index":420,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["implements",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["initialise",{"_index":560,"title":{},"body":{"components/UserViewComponent.html":{}}}],["initialises",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["inject",{"_index":250,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["inject(mat_dialog_data",{"_index":245,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["injectable",{"_index":168,"title":{"injectables/AuthService.html":{},"injectables/UserDetailService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/HeaderInterceptor.html":{},"injectables/UserDetailService.html":{},"coverage.html":{}}}],["injectables",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDetailService.html":{},"overview.html":{}}}],["input",{"_index":515,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["intercept",{"_index":307,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["intercept(request",{"_index":311,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interceptor",{"_index":304,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{"interceptors/HeaderInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":305,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interface",{"_index":398,"title":{"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":399,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["isadmin",{"_index":401,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["isedit",{"_index":454,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["isloggedin",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":292,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["json",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":288,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["karma",{"_index":646,"title":{},"body":{"index.html":{}}}],["larger",{"_index":526,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["left",{"_index":518,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"overview.html":{}}}],["line",{"_index":473,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["log",{"_index":381,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logged",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["login",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["login(username",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":55,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":376,"title":{},"body":{"components/NavbarComponent.html":{}}}],["management",{"_index":386,"title":{},"body":{"components/NavbarComponent.html":{}}}],["margin",{"_index":301,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["mat_dialog_data",{"_index":251,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["matbuttonmodule",{"_index":361,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":359,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":408,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["matdialogmodule",{"_index":367,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":231,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["materialmodule",{"_index":83,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodule",{"_index":365,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":357,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginator",{"_index":409,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["matpaginatormodule",{"_index":368,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":370,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":363,"title":{},"body":{"modules/MaterialModule.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["method",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/HeaderInterceptor.html":{}}}],["methods",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["miscellaneous",{"_index":665,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":69,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"overview.html":{}}}],["modules",{"_index":71,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":651,"title":{},"body":{"index.html":{}}}],["multi",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"index.html":{}}}],["nav",{"_index":378,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":373,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["navbar.component.html",{"_index":375,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":374,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":57,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":621,"title":{},"body":{"index.html":{}}}],["new",{"_index":234,"title":{},"body":{"components/EditUserComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["next.handle(request",{"_index":324,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["ng",{"_index":618,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":227,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["null",{"_index":384,"title":{},"body":{"components/NavbarComponent.html":{}}}],["number",{"_index":282,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["object",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/HeaderInterceptor.html":{},"injectables/UserDetailService.html":{}}}],["oninit",{"_index":218,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["open",{"_index":449,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["optional",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":595,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":298,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["pagesize",{"_index":447,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["paginate",{"_index":486,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["paginate(event",{"_index":478,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["pagination",{"_index":469,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["paginator",{"_index":428,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["param",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["parameters",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["pass",{"_index":315,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["password",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["path",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":267,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["position",{"_index":520,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["private",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["prod",{"_index":637,"title":{},"body":{"index.html":{}}}],["production",{"_index":639,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":516,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["project",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["promise",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["protractor",{"_index":648,"title":{},"body":{"index.html":{}}}],["provide",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserDetailService.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":221,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["reactiveformsmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":653,"title":{},"body":{"index.html":{}}}],["record",{"_index":462,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["redirectto",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":624,"title":{},"body":{"index.html":{}}}],["request",{"_index":316,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["request.clone",{"_index":322,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["required",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":273,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["result",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UserDetailService.html":{}}}],["returns",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["right",{"_index":523,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserDetailService.html":{}}}],["root'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":123,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":490,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["run",{"_index":617,"title":{},"body":{"index.html":{}}}],["running",{"_index":640,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/HeaderInterceptor.html":{},"injectables/UserDetailService.html":{},"dependencies.html":{}}}],["save",{"_index":464,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["scaffolding",{"_index":628,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["serve",{"_index":619,"title":{},"body":{"index.html":{}}}],["server",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDetailService.html":{}}}],["setheaders",{"_index":323,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["shared/interceptor/header.interceptor",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/material/material.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/models/user.model",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/navbar/navbar.component",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/service/user",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["sign",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":525,"title":{},"body":{"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"index.html":{}}}],["space",{"_index":389,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/auth/auth.guard.ts",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/auth/auth.guard.ts:11",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth/auth.guard.ts:28",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth/auth.guard.ts:37",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth/auth.service",{"_index":320,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/core/auth/auth.service.ts",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/auth/auth.service.ts:13",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:16",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:19",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:21",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:34",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:43",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/login/login.component.ts",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts:14",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:16",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:33",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:44",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:51",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/user/edit",{"_index":216,"title":{},"body":{"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/features/user/user",{"_index":405,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{}}}],["src/app/routing/app",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/shared/interceptor/header.interceptor.ts",{"_index":306,"title":{},"body":{"interceptors/HeaderInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/interceptor/header.interceptor.ts:12",{"_index":309,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/shared/interceptor/header.interceptor.ts:27",{"_index":314,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/shared/material/material.module.ts",{"_index":354,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/models/user.model",{"_index":544,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["src/app/shared/models/user.model.ts",{"_index":400,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":372,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:14",{"_index":377,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:27",{"_index":382,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:31",{"_index":380,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/service/user",{"_index":527,"title":{},"body":{"injectables/UserDetailService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":611,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":479,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["state",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":414,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["stored",{"_index":634,"title":{},"body":{"index.html":{}}}],["stores",{"_index":383,"title":{},"body":{"components/NavbarComponent.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["support",{"_index":654,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":460,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["svg",{"_index":655,"title":{},"body":{"modules.html":{}}}],["table",{"_index":416,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["test",{"_index":643,"title":{},"body":{"index.html":{}}}],["testcase",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["tests",{"_index":642,"title":{},"body":{"index.html":{}}}],["text",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.add",{"_index":279,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.alluser",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.alluser.map((user",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.currentuser",{"_index":254,"title":{},"body":{"components/EditUserComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.authservice.currentuser?.username",{"_index":321,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["this.authservice.getalluser",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.loginform.value.username",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.checkloggedin",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.currentuser",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.email",{"_index":441,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.empid",{"_index":434,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.id).subscribe(response",{"_index":466,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.name",{"_index":439,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.password",{"_index":437,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser.phone",{"_index":443,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.email",{"_index":440,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.empid",{"_index":433,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.name",{"_index":438,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.password",{"_index":436,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.phone",{"_index":442,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.currentuser?.username",{"_index":435,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.data.user.designation",{"_index":568,"title":{},"body":{"components/UserViewComponent.html":{}}}],["this.data.user.email",{"_index":266,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user.empid",{"_index":259,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user.id).subscribe(response",{"_index":271,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.data.user.name",{"_index":263,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user.phone",{"_index":269,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user.username",{"_index":261,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user?.designation",{"_index":567,"title":{},"body":{"components/UserViewComponent.html":{}}}],["this.data.user?.email",{"_index":265,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user?.empid",{"_index":258,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user?.name",{"_index":262,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user?.phone",{"_index":268,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data.user?.username",{"_index":260,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserViewComponent.html":{}}}],["this.data?.isedit",{"_index":277,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.dialog.open(editusercomponent",{"_index":453,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.dialog.open(userviewcomponent",{"_index":457,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.dialogref.close",{"_index":272,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.formbuilder.group",{"_index":256,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["this.getalluser",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.http.delete(this.url",{"_index":547,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["this.http.get(this.url",{"_index":545,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["this.http.post(this.url",{"_index":553,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["this.http.put(this.url",{"_index":551,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["this.loginform",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":344,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.paginate({pageindex",{"_index":446,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.router.navigate(['/login",{"_index":385,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['user",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.update",{"_index":278,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.updateform",{"_index":255,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userdataform",{"_index":430,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userdetails",{"_index":445,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userdetails.slice(startindex",{"_index":485,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userdetailslist",{"_index":484,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.useredit",{"_index":467,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userform",{"_index":432,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userservice.adduser(this.updateform.value).subscribe(response",{"_index":276,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.deleteuser(row).subscribe(response",{"_index":463,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userservice.getalluser().subscribe((users",{"_index":444,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userservice.getalluser().subscribe(users",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.updateform.value",{"_index":270,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.updateuser(this.userform.value",{"_index":465,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["this.userviewform",{"_index":565,"title":{},"body":{"components/UserViewComponent.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":302,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["true",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":477,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["typescript",{"_index":474,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["ums",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["unit",{"_index":641,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":452,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["update",{"_index":228,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{}}}],["updateform",{"_index":224,"title":{},"body":{"components/EditUserComponent.html":{}}}],["updateuser",{"_index":532,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["updateuser(userdata",{"_index":541,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["updateuser(userdata:any",{"_index":549,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["url",{"_index":529,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["urltree",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":630,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["user.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["user.component.html",{"_index":220,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":219,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts",{"_index":217,"title":{},"body":{"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:17",{"_index":249,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:20",{"_index":232,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":247,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:35",{"_index":246,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:41",{"_index":238,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:49",{"_index":243,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:62",{"_index":241,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:76",{"_index":233,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:90",{"_index":235,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.email",{"_index":509,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.empid",{"_index":507,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.id",{"_index":548,"title":{},"body":{"injectables/UserDetailService.html":{}}}],["user.name",{"_index":508,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phone",{"_index":510,"title":{},"body":{"components/UserDetailComponent.html":{}}}],["user.username",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/UserDetailComponent.html":{}}}],["user/edit",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"coverage.html":{}}}],["userdata",{"_index":404,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"coverage.html":{}}}],["userdataform",{"_index":431,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["userdetailcomponent",{"_index":59,"title":{"components/UserDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdetails",{"_index":415,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["userdetailservice",{"_index":188,"title":{"injectables/UserDetailService.html":{}},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"coverage.html":{}}}],["userdetailslist",{"_index":426,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["useredit",{"_index":425,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["userform",{"_index":423,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["username",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["users",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{}}}],["userservice",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["userviewcomponent",{"_index":62,"title":{"components/UserViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userviewform",{"_index":557,"title":{},"body":{"components/UserViewComponent.html":{}}}],["validators",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{},"injectables/UserDetailService.html":{},"components/UserViewComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["variable",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{}}}],["variables",{"_index":666,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":615,"title":{},"body":{"index.html":{}}}],["via",{"_index":645,"title":{},"body":{"index.html":{}}}],["view",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["view(user",{"_index":456,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["view.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["view.component.html",{"_index":556,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.scss",{"_index":555,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts",{"_index":554,"title":{},"body":{"components/UserViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:14",{"_index":564,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts:16",{"_index":558,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts:26",{"_index":563,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts:27",{"_index":562,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts:31",{"_index":559,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view.component.ts:36",{"_index":561,"title":{},"body":{"components/UserViewComponent.html":{}}}],["view/user",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":407,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["viewchild(matpaginator",{"_index":427,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["visibility",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{}}}],["visibility_off",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{},"components/UserViewComponent.html":{}}}],["want",{"_index":461,"title":{},"body":{"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["welcome",{"_index":387,"title":{},"body":{"components/NavbarComponent.html":{}}}],["whether",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/UserData.html":{},"components/UserDetailComponent.html":{}}}],["white",{"_index":394,"title":{},"body":{"components/NavbarComponent.html":{}}}],["width",{"_index":296,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailComponent.html":{}}}],["zone.js",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugElement\n                            \n                            \n                                    Static\n                                debugElement\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                        Variable declared for testcase of router outlet \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debugElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                        Variable declared for testcase of router outlet \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UMS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                        Title of the project \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**Title of the project */\n  title = 'UMS';\n  /**Variable declared for testcase of router outlet */\n  debugElement: any;\n  /**Variable declared for testcase of router outlet */\n  static debugElement: any;\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nAppModule -->\n\nUserDetailComponent->AppModule\n\n\n\n\n\nUserViewComponent\n\nUserViewComponent\n\nAppModule -->\n\nUserViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditUserComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            UserDetailComponent\n                        \n                        \n                            UserViewComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HeaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { MaterialModule } from './shared/material/material.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './features/Login/login.component';\nimport { UserDetailComponent } from './features/User/user-detail/user-detail.component';\nimport { EditUserComponent } from './features/User/edit-user/edit-user.component';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { HeaderInterceptor } from './shared/interceptor/header.interceptor';\nimport { UserViewComponent } from './features/User/user-view/user-view.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserDetailComponent,\n    EditUserComponent,\n    NavbarComponent,\n    UserViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [ \n    { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../features/Login/login.component';\nimport { EditUserComponent } from '../features/User/edit-user/edit-user.component';\nimport { UserDetailComponent } from '../features/User/user-detail/user-detail.component';\nimport { AuthGuard } from '../core/Auth/auth.guard';\n\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'user', component: UserDetailComponent, canActivate: [AuthGuard] },\n  { path: 'edituser', component: EditUserComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: 'login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/Auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/Auth/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            It initialises the Auth guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/Auth/auth.guard.ts:28\n                \n            \n\n\n            \n                \n                    method to check the activation of routes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/Auth/auth.guard.ts:37\n                \n            \n\n\n            \n                \n                    function to check whether the user is logged in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  \n  /**\n   * It initialises the Auth guard\n   * @param router \n   * @param authService \n   */\n  constructor(\n    private router: Router,\n    private authService: AuthService\n    ) {}\n\n  /**\n   * method to check the activation of routes\n   * @param next \n   * @param state \n   */ \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this.checkLoggedIn();\n  }\n\n  /**\n   * function to check whether the user is logged in\n   */\n  checkLoggedIn(): boolean {\n    if (this.authService.isLoggedIn) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/Auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUser\n                            \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUser\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserDetailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/Auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            It initialises the auth service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserDetailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/Auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    function to get all the users from the server\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/Auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    function to login user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/Auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                        Declares the object for all users \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/Auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                        Declares the current user object \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/Auth/auth.service.ts:19\n                                \n                            \n                    \n                        \n                                function to check whether the user is logged in \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserDetailService } from '../../shared/service/user-detail.service';\nimport { User } from '../../shared/models/user.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**Declares the current user object */\n  currentUser: User;\n\n  /**Declares the object for all users */\n  allUser: User[];\n\n  /** function to check whether the user is logged in */\n  get isLoggedIn(): boolean {\n    return !!this.currentUser;\n  }\n\n  /**\n   * It initialises the auth service\n   * @param userService \n   */\n  constructor(\n    private userService: UserDetailService,\n  ) { }\n\n  /**\n   * function to get all the users from the server\n   */\n  getAllUser(): void {\n    this.userService.getallUser().subscribe(users => {\n      this.allUser = users;\n    });\n  }\n\n  /**\n   * function to login user\n   */\n  login(username: string, password: string): void {\n    this.allUser.map((user: User) => {\n      if (user.username === username && user.password === password) {\n        this.currentUser = user;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/User/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                ./edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CurrentUser\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addOrEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                            \n                                updateform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, userService: UserDetailService, dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/User/edit-user/edit-user.component.ts:20\n                            \n                        \n\n                \n                    \n                            It initialises the edit user component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserDetailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/edit-user/edit-user.component.ts:76\n                \n            \n\n\n            \n                \n                    function to add new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addOrEdit\n                        \n                        \n                    \n                \n            \n            \n                \naddOrEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/edit-user/edit-user.component.ts:90\n                \n            \n\n\n            \n                \n                    function display add button or edit button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/edit-user/edit-user.component.ts:41\n                \n            \n\n\n            \n                \n                    Defines the current user and initialises the update form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/edit-user/edit-user.component.ts:62\n                \n            \n\n\n            \n                \n                    function to update the user details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateform\n                        \n                        \n                    \n                \n            \n            \n                \nupdateform()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/edit-user/edit-user.component.ts:49\n                \n            \n\n\n            \n                \n                    Initialises the update form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/edit-user/edit-user.component.ts:20\n                            \n                        \n\n                \n                    \n                        Declares variable for logged in user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/edit-user/edit-user.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/edit-user/edit-user.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/edit-user/edit-user.component.ts:17\n                            \n                        \n\n                \n                    \n                        Declares user update form \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthService } from '../../../core/Auth/auth.service';\nimport { UserDetailService } from '../../../shared/service/user-detail.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  /**Declares user update form */\n  updateForm: FormGroup;\n\n  /**Declares variable for logged in user */\n  CurrentUser: any;\n\n  /**\n   * It initialises the edit user component\n   * @param formBuilder \n   * @param authService \n   * @param userService \n   * @param dialogRef \n   * @param data \n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private userService: UserDetailService,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    /**\n     * Defines the current user and initialises the update form\n     */\n  ngOnInit(): void {\n    this.CurrentUser = this.authService.currentUser;\n    this.updateform();\n  }\n\n  /**\n   * Initialises the update form\n   */\n  updateform(): void {\n    this.updateForm = this.formBuilder.group({\n      empId: [this.data.user?.empId ? this.data.user.empId : ''],\n      username: [this.data.user?.username ? this.data.user.username : ''],\n      name: [this.data.user?.name ? this.data.user.name : ''],\n      email: [this.data.user?.email ? this.data.user.email : ''],\n      phone: [this.data.user?.phone ? this.data.user.phone : '']\n    });\n  }\n\n  /**\n   * function to update the user details\n   */\n  update(): void {\n    this.userService.updateUser(this.updateForm.value, this.data.user.id).subscribe(response => {\n      this.dialogRef.close();\n      if (response) {\n        console.log(response);\n      } else {\n        console.log('Unsuccessful');\n      }\n    });\n  }\n\n  /**\n   * function to add new user\n   */\n  add(): void {\n    this.userService.addUser(this.updateForm.value).subscribe(response => {\n      this.dialogRef.close();\n      if (response) {\n        console.log(response);\n      } else {\n        console.log('Unsuccessful');\n      }\n    });\n  }\n\n  /**\n   * function display add button or edit button\n   */\n  addOrEdit(): void {\n    if (this.data?.isEdit) {\n      this.update();\n    } else {\n      this.add();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n        \n            Employee ID\n            \n        \n\n        \n            Username\n            \n        \n\n        \n            Name\n            \n        \n\n        \n            Email\n            \n        \n\n        \n            Phone Number\n            \n        \n\n        \n            {{data?.isEdit ? \"Update\" : \"Add\"}}\n        \n    \n\n\n\n    \n\n    \n                \n                    ./edit-user.component.scss\n                \n                .form-container {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n\n.field-container {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n    padding: 24px;\n}\n\n.button-conatiner{\n    margin-top: 8px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Employee ID                                        Username                                        Name                                        Email                                        Phone Number                                        {{data?.isEdit ? \"Update\" : \"Add\"}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HeaderInterceptor.html":{"url":"interceptors/HeaderInterceptor.html","title":"interceptor - HeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptor/header.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptor/header.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            It initialises the http interceptor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptor/header.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    Method to pass the username of the logged in user in request header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/core/Auth/auth.service';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\n  /**\n   * It initialises the http interceptor\n   * @param authService \n   */\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Method to pass the username of the logged in user in request header\n   * @param request \n   * @param next \n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const username = this.authService.currentUser?.username\n    if (username) {\n      request = request.clone({\n        setHeaders: {\n          Username: username\n        }\n      })\n    } else {\n      request = request.clone({\n        setHeaders: {\n          Username: ''\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/Login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUser\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/Login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            It initialises the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/Login/login.component.ts:44\n                \n            \n\n\n            \n                \n                    function to get all the users from the server\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/Login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    function to login user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/Login/login.component.ts:33\n                \n            \n\n\n            \n                \n                    It initialises the loginform and calls getAllUser function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/Login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                        Eye icon for password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/Login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                        Declares loginForm\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/Auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /** Declares loginForm*/\n  loginForm: FormGroup;\n  /**Eye icon for password */\n  hide = true;\n\n  /**\n   * It initialises the component\n   * @param formBuilder \n   * @param router \n   * @param authService \n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  /**\n   * It initialises the loginform and calls getAllUser function\n   */\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    this.getAllUser();\n  }\n\n  /**\n   * function to get all the users from the server\n   */\n  getAllUser(): void {\n    this.authService.getAllUser();\n  }\n\n  /**\n   * function to login user\n   */\n  login(): void {\n    this.authService.login(this.loginForm.value.username, this.loginForm.value.password)\n    if (this.authService.isLoggedIn) {\n      this.router.navigate(['user']);\n    } else {\n      alert('Invalid Credentials')\n      return;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Sign In\n        \n            Username\n            \n            Username is required\n        \n\n        \n            Password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n            Password is required\n        \n\n        \n            Sign In\n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .form-container {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.field-container {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n    padding: 24px;\n}\n\n.heading-container{\n    text-align: center;\n}\n\n.button-conatiner{\n    margin-top: 8px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sign In                    Username                        Username is required                            Password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                        Password is required                            Sign In            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            It initialises the nav bar component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/navbar/navbar.component.ts:31\n                \n            \n\n\n            \n                \n                    Function for log out \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/navbar/navbar.component.ts:27\n                \n            \n\n\n            \n                \n                    stores the logged in user in current user variable \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                        Declares variable for logged in user \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/Auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  /**Declares variable for logged in user */\n  currentUser: any;\n\n  /**\n   * It initialises the nav bar component\n   * @param authService \n   * @param router \n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  /**stores the logged in user in current user variable */\n  ngOnInit(): void {\n    this.currentUser = this.authService.currentUser;\n  }\n  /**Function for log out */\n  logout(): void {\n    this.authService.currentUser = null;\n    this.router.navigate(['/login'])\n  }\n\n}\n\n    \n\n    \n        \n    \n        User Management\n    \n\n    \n        Welcome {{currentUser?.name}}\n\n        \n            Log out\n        \n    \n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .navbar{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #3f51b5;\n    color: white;\n    padding: 0 24px;\n    height: 64px;\n}\n\nh2 {\n    margin: 0;\n}\n\n.log {\n    display: flex;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            User Management                Welcome {{currentUser?.name}}                    Log out            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        empId\n                                \n                                \n                                            Optional\n                                        isAdmin\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        phone\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empId\n                                    \n                                \n                                \n                                    \n                                        empId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee ID of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Checks the logged in user is admin \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phone number of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Username of the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /**Employee ID of the user */\n    empId: string;\n    /**Username of the user */\n    username: string;\n    /**Password of the user */\n    password: string;\n    /**Name of the user */\n    name: string;\n    /**Email of the user */\n    email: string;\n    /**Phone number of the user */\n    phone: number;\n    /**Checks the logged in user is admin */\n    isAdmin?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/User/user-detail/user-detail.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        empId\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empId\n                                    \n                                \n                                \n                                    \n                                        empId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee Id of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phone number of the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { AuthService } from '../../../core/Auth/auth.service';\nimport { UserDetailService } from '../../../shared/service/user-detail.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UserViewComponent } from '../user-view/user-view.component';\n\n\nexport interface UserData {\n  /**Employee Id of the user */\n  empId: any;\n  /**Name of the user */\n  name: string;\n  /**Email of the user */\n  email: string;\n  /**Phone number of the user */\n  phone: number;\n}\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  /**Declares variable for logged in user */\n  currentUser: any;\n  /**Variable declaration to check whether the logged in user is admin */\n  isAdmin: boolean;\n  /**Variable declaration to store all the users*/\n  userdetails: UserData[];\n  /**Table column variable declaration */\n  displayedColumns = ['empId', 'name', 'username', 'email', 'phone', 'edit', 'delete'];\n  /**avatar image variable declaration */\n  avatarImg = '../../../../assets/avatar.png';\n  /**User form declaration */\n  userForm: FormGroup;\n  /**Variable declaration to decide to display or edit user*/\n  userEdit = false;\n  /**Table column variable declaration */\n  userdetailsList: any[];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  /**\n   * It initialises the user detail component\n   * @param authService \n   * @param userService \n   * @param dialog \n   * @param formBuilder \n   */\n  constructor(\n    private authService: AuthService,\n    private userService: UserDetailService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    \n  ) { }\n\n  /**\n   * Defines the current user and initialises the user update form and calls getAllUser function\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.currentUser;\n    this.userDataForm();\n    this.getallUser();\n  }\n  \n  /**Initialises the user update form */\n  userDataForm(): void {\n    this.userForm = this.formBuilder.group({\n      empId: [this.currentUser?.empId ? this.currentUser.empId : ''],\n      username: [this.currentUser?.username ? this.currentUser.empId : ''],\n      password: [this.currentUser?.password ? this.currentUser.password : ''],\n      name: [this.currentUser?.name ? this.currentUser.name : ''],\n      email: [this.currentUser?.email ? this.currentUser.email : ''],\n      phone: [this.currentUser?.phone ? this.currentUser.phone : '']\n    });\n  }\n\n    /**\n   * function to get all the users from the server\n   */\n  getallUser(): void {\n    this.userService.getallUser().subscribe((users: any) => {\n      this.userdetails = users;\n      this.paginate({pageIndex: 0, pageSize: 5})\n    });\n  }\n\n  /**Function to open the EditUserComponent in a dialog box */\n  edit(user: unknown): void {\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: {user, isEdit: true}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to open the UserViewComponent in a dialog box */\n  view(user: unknown): void {\n    const dialogRef = this.dialog.open(UserViewComponent, {\n      data: {user}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to open the EditUserComponent in a dialog box */\n  add(): void {\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: {isEdit: false}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to delete the user */\n  delete(row: unknown): void {\n    confirm('Are you sure you want to delete the record?')\n    this.userService.deleteUser(row).subscribe(response => {\n      if (response) {\n        this.getallUser();\n      } else {\n        console.log('Unsuccessful');\n      }\n    });\n  }\n\n  /**Function to update the user details */\n  save(): void {\n    this.userService.updateUser(this.userForm.value, this.currentUser.id).subscribe(response => {\n      if (response) {\n        this.getallUser();\n        this.userEdit = false;\n      }\n    });\n  }\n\n  \n  \n  /**\n   * Function to define the pagination\n   * @param event \n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  paginate(event) {\n    const startIndex = event.pageIndex * event.pageSize;\n    let endIndex = startIndex + event.pageSize;\n    if(endIndex > this.userdetails){\n      endIndex = this.userdetails;\n    }\n    this.userdetailsList = this.userdetails.slice(startIndex, endIndex);\n  }\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailComponent.html":{"url":"components/UserDetailComponent.html","title":"component - UserDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/User/user-detail/user-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-detail\n            \n\n            \n                styleUrls\n                ./user-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarImg\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                isAdmin\n                            \n                            \n                                paginator\n                            \n                            \n                                userdetails\n                            \n                            \n                                userdetailsList\n                            \n                            \n                                userEdit\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                getallUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                paginate\n                            \n                            \n                                save\n                            \n                            \n                                userDataForm\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserDetailService, dialog: MatDialog, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/User/user-detail/user-detail.component.ts:48\n                            \n                        \n\n                \n                    \n                            It initialises the user detail component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserDetailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:119\n                \n            \n\n\n            \n                \n                    Function to open the EditUserComponent in a dialog box \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(row: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:130\n                \n            \n\n\n            \n                \n                    Function to delete the user \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit(user: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:97\n                \n            \n\n\n            \n                \n                    Function to open the EditUserComponent in a dialog box \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getallUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetallUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:89\n                \n            \n\n\n            \n                \n                    function to get all the users from the server\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:68\n                \n            \n\n\n            \n                \n                    Defines the current user and initialises the user update form and calls getAllUser function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \npaginate(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:158\n                \n            \n\n\n            \n                \n                    Function to define the pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:142\n                \n            \n\n\n            \n                \n                    Function to update the user details \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userDataForm\n                        \n                        \n                    \n                \n            \n            \n                \nuserDataForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:75\n                \n            \n\n\n            \n                \n                    Initialises the user update form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            view\n                        \n                        \n                    \n                \n            \n            \n                \nview(user: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-detail/user-detail.component.ts:108\n                \n            \n\n\n            \n                \n                    Function to open the UserViewComponent in a dialog box \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatarImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '../../../../assets/avatar.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:40\n                            \n                        \n\n                \n                    \n                        avatar image variable declaration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                        Declares variable for logged in user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['empId', 'name', 'username', 'email', 'phone', 'edit', 'delete']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:38\n                            \n                        \n\n                \n                    \n                        Table column variable declaration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:34\n                            \n                        \n\n                \n                    \n                        Variable declaration to check whether the logged in user is admin \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userdetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:36\n                            \n                        \n\n                \n                    \n                        Variable declaration to store all the users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userdetailsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:46\n                            \n                        \n\n                \n                    \n                        Table column variable declaration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:44\n                            \n                        \n\n                \n                    \n                        Variable declaration to decide to display or edit user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-detail/user-detail.component.ts:42\n                            \n                        \n\n                \n                    \n                        User form declaration \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { AuthService } from '../../../core/Auth/auth.service';\nimport { UserDetailService } from '../../../shared/service/user-detail.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UserViewComponent } from '../user-view/user-view.component';\n\n\nexport interface UserData {\n  /**Employee Id of the user */\n  empId: any;\n  /**Name of the user */\n  name: string;\n  /**Email of the user */\n  email: string;\n  /**Phone number of the user */\n  phone: number;\n}\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  /**Declares variable for logged in user */\n  currentUser: any;\n  /**Variable declaration to check whether the logged in user is admin */\n  isAdmin: boolean;\n  /**Variable declaration to store all the users*/\n  userdetails: UserData[];\n  /**Table column variable declaration */\n  displayedColumns = ['empId', 'name', 'username', 'email', 'phone', 'edit', 'delete'];\n  /**avatar image variable declaration */\n  avatarImg = '../../../../assets/avatar.png';\n  /**User form declaration */\n  userForm: FormGroup;\n  /**Variable declaration to decide to display or edit user*/\n  userEdit = false;\n  /**Table column variable declaration */\n  userdetailsList: any[];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  /**\n   * It initialises the user detail component\n   * @param authService \n   * @param userService \n   * @param dialog \n   * @param formBuilder \n   */\n  constructor(\n    private authService: AuthService,\n    private userService: UserDetailService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    \n  ) { }\n\n  /**\n   * Defines the current user and initialises the user update form and calls getAllUser function\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.currentUser;\n    this.userDataForm();\n    this.getallUser();\n  }\n  \n  /**Initialises the user update form */\n  userDataForm(): void {\n    this.userForm = this.formBuilder.group({\n      empId: [this.currentUser?.empId ? this.currentUser.empId : ''],\n      username: [this.currentUser?.username ? this.currentUser.empId : ''],\n      password: [this.currentUser?.password ? this.currentUser.password : ''],\n      name: [this.currentUser?.name ? this.currentUser.name : ''],\n      email: [this.currentUser?.email ? this.currentUser.email : ''],\n      phone: [this.currentUser?.phone ? this.currentUser.phone : '']\n    });\n  }\n\n    /**\n   * function to get all the users from the server\n   */\n  getallUser(): void {\n    this.userService.getallUser().subscribe((users: any) => {\n      this.userdetails = users;\n      this.paginate({pageIndex: 0, pageSize: 5})\n    });\n  }\n\n  /**Function to open the EditUserComponent in a dialog box */\n  edit(user: unknown): void {\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: {user, isEdit: true}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to open the UserViewComponent in a dialog box */\n  view(user: unknown): void {\n    const dialogRef = this.dialog.open(UserViewComponent, {\n      data: {user}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to open the EditUserComponent in a dialog box */\n  add(): void {\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: {isEdit: false}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getallUser();\n    });\n  }\n\n  /**Function to delete the user */\n  delete(row: unknown): void {\n    confirm('Are you sure you want to delete the record?')\n    this.userService.deleteUser(row).subscribe(response => {\n      if (response) {\n        this.getallUser();\n      } else {\n        console.log('Unsuccessful');\n      }\n    });\n  }\n\n  /**Function to update the user details */\n  save(): void {\n    this.userService.updateUser(this.userForm.value, this.currentUser.id).subscribe(response => {\n      if (response) {\n        this.getallUser();\n        this.userEdit = false;\n      }\n    });\n  }\n\n  \n  \n  /**\n   * Function to define the pagination\n   * @param event \n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  paginate(event) {\n    const startIndex = event.pageIndex * event.pageSize;\n    let endIndex = startIndex + event.pageSize;\n    if(endIndex > this.userdetails){\n      endIndex = this.userdetails;\n    }\n    this.userdetailsList = this.userdetails.slice(startIndex, endIndex);\n  }\n}\n\n\n    \n\n    \n        \n\n\n  \n    + Add User\n  \n\n\n\n    \n\n      \n         Employee ID \n        {{user.empId}}\n      \n\n      \n         Name \n         {{user.name}} \n      \n\n      \n         Username \n         {{user.username}} \n      \n        \n        \n           Email \n           {{user.email}} \n        \n\n        \n           Phone Number \n           {{user.phone}} \n        \n\n         \n           Edit \n          \n            \n              edit\n            \n        \n\n         \n           Delete \n          \n            \n              delete\n            \n        \n    \n        \n        \n    \n\n    \n      \n    \n\n\n\n\n  \n    \n      \n      \n        edit\n      \n    \n\n    \n      \n\n        \n          Employee ID\n          \n        \n\n        \n          Name\n          \n        \n\n        \n          Username\n          \n        \n\n        \n          Email\n          \n        \n\n        \n          Phone Number\n          \n        \n      \n\n      \n        Save\n        Cancel\n      \n    \n  \n\n    \n\n    \n                \n                    ./user-detail.component.scss\n                \n                table {\n    width: 100%;\n  }\n\n  .table-container{\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    padding: 0 24px;\n  }\n\n  .user-card{\n    display: flex;\n    justify-content: center;\n    align-content: center;\n  }\n\n  .card-width{\n    width: 500px;\n  }\n\n  .data-alignment{\n    display: flex;\n    justify-content: space-evenly;\n  }\n\n  .input-field {\n    width: 100%;\n  }\n\n  .profile-container{\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .button-container{\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .button-margin{\n    margin-left: 20px;\n  }\n\n  .add-button{\n    display: flex;\n    justify-content: flex-end;\n    padding: 24px;\n  }\n\n  .paginate-container {\n    position: fixed;\n    bottom: 0;\n    right: 0;\n}\n\n.font-size {\n  font-size: larger;\n}\n\n.paginate-container {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      + Add User                     Employee ID         {{user.empId}}                     Name          {{user.name}}                      Username          {{user.username}}                                  Email            {{user.email}}                            Phone Number            {{user.phone}}                             Edit                                     edit                                        Delete                                     delete                                                                                    edit                                      Employee ID                                    Name                                    Username                                    Email                                    Phone Number                                      Save        Cancel            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDetailService.html":{"url":"injectables/UserDetailService.html","title":"injectable - UserDetailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserDetailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/user-detail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getallUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/service/user-detail.service.ts:14\n                            \n                        \n\n                \n                    \n                            It initialises the user detail service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \naddUser(userData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/service/user-detail.service.ts:38\n                \n            \n\n\n            \n                \n                    Function to add users in the server \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/service/user-detail.service.ts:30\n                \n            \n\n\n            \n                \n                    Function to delete a user from the server \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getallUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetallUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/service/user-detail.service.ts:25\n                \n            \n\n\n            \n                \n                    Function to get all users from the server \n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(userdata: any, id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/service/user-detail.service.ts:34\n                \n            \n\n\n            \n                \n                    Function to update the users in the server \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userdata\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/Users'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/service/user-detail.service.ts:14\n                            \n                        \n\n                \n                    \n                        server url declaration \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailService {\n\n  /**server url declaration */\n  url = '/api/Users';\n\n  /**\n   * It initialises the user detail service\n   * @param http \n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**Function to get all users from the server */\n  getallUser(): Observable {\n    return this.http.get(this.url);\n  }\n\n  /**Function to delete a user from the server */\n  deleteUser(user:any): Observable{\n    return this.http.delete(this.url + '/' + user.id);\n  }\n  /**Function to update the users in the server */\n  updateUser(userdata:any, id:any): Observable {\n    return this.http.put(this.url + '/' + id, userdata);\n  }\n  /**Function to add users in the server */\n  addUser(userData:any): Observable {\n    return this.http.post(this.url, userData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserViewComponent.html":{"url":"components/UserViewComponent.html","title":"component - UserViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/User/user-view/user-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-view\n            \n\n            \n                styleUrls\n                ./user-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarImg\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                userviewForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                userviewform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/User/user-view/user-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            It initialises user view component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-view/user-view.component.ts:31\n                \n            \n\n\n            \n                \n                    Initialise the user view form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userviewform\n                        \n                        \n                    \n                \n            \n            \n                \nuserviewform()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/User/user-view/user-view.component.ts:36\n                \n            \n\n\n            \n                \n                    Initialise the user view form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatarImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '../../../../assets/avatar.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-view/user-view.component.ts:16\n                            \n                        \n\n                \n                    \n                        avatar image variable declaration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-view/user-view.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-view/user-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userviewForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/User/user-view/user-view.component.ts:14\n                            \n                        \n\n                \n                    \n                        Declares user update form \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.scss']\n})\nexport class UserViewComponent implements OnInit {\n\n  /**Declares user update form */\n  userviewForm: FormGroup;\n  /**avatar image variable declaration */\n  avatarImg = '../../../../assets/avatar.png';\n\n  /**\n   * It initialises user view component\n   * @param formBuilder \n   * @param dialogRef \n   * @param data \n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) { }\n\n  /**Initialise the user view form */\n  ngOnInit(): void {\n    this.userviewform()\n  }\n\n  /**Initialise the user view form */\n  userviewform(): void {\n    this.userviewForm = this.formBuilder.group({\n      empId: [this.data.user?.empId ? this.data.user.empId : ''],\n      username: [this.data.user?.username ? this.data.user.username : ''],\n      name: [this.data.user?.name ? this.data.user.name : ''],\n      email: [this.data.user?.email ? this.data.user.email : ''],\n      designation: [this.data.user?.designation ? this.data.user.designation : ''],\n      phone: [this.data.user?.phone ? this.data.user.phone : ''],\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n        \n\n            \n                \n                    Employee ID\n                    \n                \n\n                \n                    Email\n                    \n                \n            \n    \n            \n                \n                    Name\n                    \n                \n\n                \n                    Designation\n                    \n                \n            \n\n            \n                \n                    Username\n                    \n                \n\n                \n                    Phone Number\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-view.component.scss\n                \n                .font-size {\n    font-size: larger;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Employee ID                                                                        Email                                                                                                    Name                                                                        Designation                                                                                                Username                                                                        Phone Number                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'UserDetailComponent', 'selector': 'app-user-detail'},{'name': 'UserViewComponent', 'selector': 'app-user-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/Auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/features/Login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/features/User/edit-user/edit-user.component.ts\n            \n            component\n            EditUserComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/features/User/user-detail/user-detail.component.ts\n            \n            component\n            UserDetailComponent\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                src/app/features/User/user-detail/user-detail.component.ts\n            \n            interface\n            UserData\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/features/User/user-view/user-view.component.ts\n            \n            component\n            UserViewComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/shared/interceptor/header.interceptor.ts\n            \n            interceptor\n            HeaderInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            User\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/shared/service/user-detail.service.ts\n            \n            injectable\n            UserDetailService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.7\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ~9.0.7\n        \n            @angular/compiler : ~9.0.7\n        \n            @angular/core : ~9.0.7\n        \n            @angular/forms : ~9.0.7\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ~9.0.7\n        \n            @angular/platform-browser-dynamic : ~9.0.7\n        \n            @angular/router : ~9.0.7\n        \n            json-server : ^0.16.2\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nUMS\nThis project was generated with Angular CLI version 9.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nUserDetailComponent\n\nUserDetailComponent\n\nAppModule -->\n\nUserDetailComponent->AppModule\n\n\n\n\n\nUserViewComponent\n\nUserViewComponent\n\nAppModule -->\n\nUserViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
